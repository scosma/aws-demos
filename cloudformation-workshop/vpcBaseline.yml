---
AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Template for Hubertc@ to create network infrastructure.
Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.0.0.0/16
    Public1:
      CIDR: 10.0.0.0/24
    Public2:
      CIDR: 10.0.1.0/24
    Private1:
      CIDR: 10.0.2.0/24
    Private2:
      CIDR: 10.0.4.0/24
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock:
        Fn::FindInMap:
        - SubnetConfig
        - VPC
        - CIDR
      Tags:
      - Key: Name
        Value: CFN Created VPC
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 0
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId:
        Ref: VPC
      MapPublicIpOnLaunch: true
      CidrBlock:
        Fn::FindInMap:
        - SubnetConfig
        - Public1
        - CIDR
      Tags:
      - Key: Name
        Value: CFN Public 1
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 1
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId:
        Ref: VPC
      MapPublicIpOnLaunch: true
      CidrBlock:
        Fn::FindInMap:
        - SubnetConfig
        - Public2
        - CIDR
      Tags:
      - Key: Name
        Value: CFN Public 2
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 0
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::FindInMap:
        - SubnetConfig
        - Private1
        - CIDR
      Tags:
      - Key: Name
        Value: CFN Private 1
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Private
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 1
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::FindInMap:
        - SubnetConfig
        - Private2
        - CIDR
      Tags:
      - Key: Name
        Value: CFN Private 2
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Private
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
        
  NatGWEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      
  NatGW:
    DependsOn: GatewayToInternet
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NatGWEIP
        - AllocationId
      SubnetId:
        Ref: PublicSubnet1
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicRouteTable
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
  PrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGW
  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateRouteTable
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: PrivateRouteTable
